{"version":3,"file":"static/js/640.93c2e067.chunk.js","mappings":"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","sources":["../node_modules/@spectrum-web-components/overlay/src/active-overlay.css.ts","../node_modules/@spectrum-web-components/overlay/src/overlay-utils.ts","../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/@spectrum-web-components/overlay/src/ActiveOverlay.ts","../node_modules/@spectrum-web-components/overlay/src/overlay-timer.ts","../node_modules/@spectrum-web-components/overlay/active-overlay.ts","../node_modules/@spectrum-web-components/shared/src/get-deep-element-from-point.ts","../node_modules/@spectrum-web-components/overlay/src/overlay-stack.ts","../node_modules/@spectrum-web-components/overlay/src/overlay.ts"],"sourcesContent":["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from '@spectrum-web-components/base';\nconst styles = css`\n@keyframes sp-overlay-fade-in{0%{opacity:0;transform:var(--sp-overlay-from)}to{opacity:1;transform:translate(0)}}@keyframes sp-overlay-fade-out{0%{opacity:1;transform:translate(0)}to{opacity:0;transform:var(--sp-overlay-from)}}:host{display:inline-block;left:-9999em;max-height:100%;pointer-events:none;position:fixed;top:-9999em;z-index:1000}:host(:focus){outline:none}:host([placement=none]){height:100vh;height:100dvh;height:-webkit-fill-available;height:fill-available;left:0;position:fixed;top:0}#contents,sp-theme{height:100%}#contents{--swc-overlay-animation-distance:var(\n--spectrum-picker-m-texticon-popover-offset-y,var(--spectrum-global-dimension-size-75)\n);animation-duration:var(\n--swc-test-duration,var(--spectrum-global-animation-duration-200,.16s)\n);animation-timing-function:var(\n--spectrum-global-animation-ease-out,ease-out\n);box-sizing:border-box;display:inline-block;opacity:1;pointer-events:none;visibility:visible}:host([actual-placement*=top]) #contents{--sp-overlay-from:translateY(var(--spectrum-global-dimension-size-75));align-items:flex-end;display:inline-flex;padding-top:var(--swc-overlay-animation-distance)}:host([actual-placement*=right]) #contents{--sp-overlay-from:translateX(calc(var(--spectrum-global-dimension-size-75)*-1));padding-right:var(--swc-overlay-animation-distance)}:host([actual-placement*=bottom]) #contents{--sp-overlay-from:translateY(calc(var(--spectrum-global-dimension-size-75)*-1));padding-bottom:var(--swc-overlay-animation-distance)}:host([actual-placement*=left]) #contents{--sp-overlay-from:translateX(var(--spectrum-global-dimension-size-75));padding-left:var(--swc-overlay-animation-distance)}:host([animating]) ::slotted(*){pointer-events:none}:host(:not([animating])) ::slotted(*){pointer-events:auto}#contents ::slotted(*){position:relative}\n`;\nexport default styles;","/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport type { ActiveOverlay } from './ActiveOverlay';\n\nexport const parentOverlayOf = (el?: Element): ActiveOverlay | null => {\n    if (!el) return null;\n    const closestOverlay = el.closest('active-overlay');\n    if (closestOverlay) {\n        return closestOverlay;\n    }\n    const rootNode = el.getRootNode() as ShadowRoot;\n    if (rootNode.host) {\n        return parentOverlayOf(rootNode.host);\n    }\n    return null;\n};\n\nexport const findOverlaysRootedInOverlay = (\n    rootOverlay: ActiveOverlay | undefined,\n    activeOverlays: ActiveOverlay[]\n): ActiveOverlay[] => {\n    const overlays: ActiveOverlay[] = [];\n    if (!rootOverlay) return [];\n    for (const overlay of activeOverlays) {\n        if (!overlay.root) continue;\n        if (parentOverlayOf(overlay.root) === rootOverlay) {\n            overlays.push(overlay);\n            overlays.push(\n                ...findOverlaysRootedInOverlay(overlay, activeOverlays)\n            );\n        }\n    }\n    return overlays;\n};\n","const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset + alignmentOffset\n      }\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { reparentChildren } from '@spectrum-web-components/shared/src/reparent-children.js';\nimport { firstFocusableIn } from '@spectrum-web-components/shared/src/first-focusable-in.js';\nimport type {\n    Color,\n    Scale,\n    ThemeVariant,\n} from '@spectrum-web-components/theme/src/Theme.js';\nimport styles from './active-overlay.css.js';\nimport { parentOverlayOf } from './overlay-utils.js';\nimport {\n    OverlayOpenCloseDetail,\n    OverlayOpenDetail,\n    Placement,\n    TriggerInteractions,\n} from './overlay-types.js';\nimport type { VirtualTrigger } from './VirtualTrigger.js';\nimport {\n    arrow,\n    autoUpdate,\n    computePosition,\n    flip,\n    Placement as FloatingUIPlacement,\n    offset,\n    shift,\n    size,\n} from '@floating-ui/dom';\n\nexport interface PositionResult {\n    arrowOffsetLeft: number;\n    arrowOffsetTop: number;\n    maxHeight: number;\n    placement: string;\n    positionLeft: number;\n    positionTop: number;\n}\n\ntype OverlayStateType = 'idle' | 'active' | 'hiding' | 'dispose' | 'disposed';\ntype ContentAnimation = 'sp-overlay-fade-in' | 'sp-overlay-fade-out';\n\nconst stateMachine: {\n    initial: OverlayStateType;\n    states: {\n        [stateName: string]: {\n            on: {\n                [transitionName: string]: OverlayStateType;\n            };\n        };\n    };\n} = {\n    initial: 'idle',\n    states: {\n        idle: {\n            on: {\n                active: 'active',\n            },\n        },\n        active: {\n            on: {\n                hiding: 'hiding',\n                idle: 'idle',\n            },\n        },\n        hiding: {\n            on: {\n                dispose: 'dispose',\n            },\n        },\n        dispose: {\n            on: {\n                disposed: 'disposed',\n            },\n        },\n        disposed: {\n            on: {},\n        },\n    },\n};\n\nconst stateTransition = (\n    state?: OverlayStateType,\n    event?: string\n): OverlayStateType => {\n    if (!state) return stateMachine.initial;\n    /* c8 ignore next */\n    if (!event) return state;\n    return stateMachine.states[state].on[event] || state;\n};\n\nconst getFallbackPlacements = (\n    placement: FloatingUIPlacement\n): FloatingUIPlacement[] => {\n    const fallbacks: Record<FloatingUIPlacement, FloatingUIPlacement[]> = {\n        left: ['right', 'bottom', 'top'],\n        'left-start': ['right-start', 'bottom', 'top'],\n        'left-end': ['right-end', 'bottom', 'top'],\n        right: ['left', 'bottom', 'top'],\n        'right-start': ['left-start', 'bottom', 'top'],\n        'right-end': ['left-end', 'bottom', 'top'],\n        top: ['bottom', 'left', 'right'],\n        'top-start': ['bottom-start', 'left', 'right'],\n        'top-end': ['bottom-end', 'left', 'right'],\n        bottom: ['top', 'left', 'right'],\n        'bottom-start': ['top-start', 'left', 'right'],\n        'bottom-end': ['top-end', 'left', 'right'],\n    };\n    return fallbacks[placement] ?? [placement];\n};\n\n/**\n * @element active-overlay\n *\n * @slot - content to display in the overlay\n */\nexport class ActiveOverlay extends SpectrumElement {\n    public overlayContent!: HTMLElement;\n    public overlayContentTip?: HTMLElement;\n    public trigger!: HTMLElement;\n    public root?: HTMLElement;\n    public virtualTrigger?: VirtualTrigger;\n    private cleanup?: () => void;\n\n    protected contentAnimationPromise: Promise<boolean> = Promise.resolve(true);\n    protected resolveContentAnimationPromise = (): void => {\n        return;\n    };\n\n    @property()\n    public _state = stateTransition();\n    public get state(): OverlayStateType {\n        return this._state;\n    }\n    public set state(state: OverlayStateType) {\n        const nextState = stateTransition(this.state, state);\n        if (nextState === this.state) {\n            return;\n        }\n        this._state = nextState;\n        if (this.state === 'active' || this.state === 'hiding') {\n            this.setAttribute('state', this.state);\n        } else {\n            this.removeAttribute('state');\n        }\n    }\n\n    @property({ reflect: true, type: Boolean })\n    public animating = false;\n\n    @property({ reflect: true })\n    public placement?: Placement;\n    @property({ attribute: false })\n    public theme: {\n        color?: Color;\n        scale?: Scale;\n        lang?: string;\n        theme?: ThemeVariant;\n    } = {};\n    @property({ attribute: false })\n    public receivesFocus?: 'auto';\n\n    public tabbingAway = false;\n    private originalPlacement?: Placement;\n    private restoreContent?: () => Element[];\n\n    public override async focus(): Promise<void> {\n        const firstFocusable = firstFocusableIn(this);\n        if (firstFocusable) {\n            if ((firstFocusable as SpectrumElement).updateComplete) {\n                await firstFocusable.updateComplete;\n            }\n            const activeElement = (this.getRootNode() as Document)\n                .activeElement;\n            if (activeElement === this || !this.contains(activeElement)) {\n                firstFocusable.focus();\n            }\n            /* c8 ignore next 3 */\n        } else {\n            super.focus();\n        }\n        this.removeAttribute('tabindex');\n    }\n\n    private get hasTheme(): boolean {\n        return !!this.theme.color || !!this.theme.scale || !!this.theme.lang;\n    }\n\n    public offset = 6;\n    public skidding = 0;\n    public interaction: TriggerInteractions = 'hover';\n    private positionAnimationFrame = 0;\n\n    private timeout?: number;\n\n    public static override get styles(): CSSResultArray {\n        return [styles];\n    }\n\n    public constructor() {\n        super();\n        this.stealOverlayContentPromise = new Promise(\n            (res) => (this.stealOverlayContentResolver = res)\n        );\n    }\n\n    private _modalRoot?: ActiveOverlay;\n\n    public get hasModalRoot(): boolean {\n        return !!this._modalRoot;\n    }\n\n    public feature(): void {\n        // eslint-disable-next-line @spectrum-web-components/document-active-element\n        if (!this.contains(document.activeElement)) {\n            this.tabIndex = -1;\n        }\n        const parentOverlay = parentOverlayOf(this.trigger);\n        const parentIsModal = parentOverlay && parentOverlay.slot === 'open';\n        if (parentIsModal) {\n            this._modalRoot = parentOverlay._modalRoot || parentOverlay;\n        }\n        // If an overlay it triggered from within a \"modal\" overlay, it needs to continue\n        // to act like one to get treated correctly in regards to tab trapping.\n        if (this.interaction === 'modal' || this._modalRoot) {\n            this.slot = 'open';\n            if (this.interaction === 'modal') {\n                this.setAttribute('aria-modal', 'true');\n            }\n            // If this isn't a modal root, walk up the overlays to the next modal root\n            // and \"feature\" each on of the intervening overlays.\n            if (this._modalRoot) {\n                parentOverlay?.feature();\n            }\n        }\n    }\n\n    public obscure(\n        nextOverlayInteraction: TriggerInteractions\n    ): ActiveOverlay | undefined {\n        if (this.slot && nextOverlayInteraction === 'modal') {\n            this.removeAttribute('slot');\n            this.removeAttribute('aria-modal');\n            // Obscure upto and including the next modal root.\n            if (this.interaction !== 'modal') {\n                const parentOverlay = parentOverlayOf(this.trigger);\n                this._modalRoot = parentOverlay?.obscure(\n                    nextOverlayInteraction\n                );\n                return this._modalRoot;\n            }\n            return this;\n        }\n        return undefined;\n    }\n\n    public override async willUpdate(): Promise<void> {\n        if (this.hasUpdated) return;\n\n        /* c8 ignore next */\n        if (!this.overlayContent || !this.trigger) return;\n\n        this.stealOverlayContent(\n            this.overlayContent as HTMLElement & { placement: Placement }\n        );\n\n        this.state = 'active';\n\n        this.feature();\n        if (this.placement && this.placement !== 'none') {\n            await this.updateOverlayPosition();\n            document.addEventListener(\n                'sp-update-overlays',\n                this.resetOverlayPosition\n            );\n        }\n        if (this.placement && this.placement !== 'none') {\n            this.contentAnimationPromise =\n                this.applyContentAnimation('sp-overlay-fade-in');\n        }\n    }\n\n    public async openCallback(\n        lifecycleCallback: () => Promise<void> | void\n    ): Promise<void> {\n        await this.updateComplete;\n        if (this.receivesFocus) {\n            await this.focus();\n        }\n\n        await lifecycleCallback();\n\n        this.trigger.dispatchEvent(\n            new CustomEvent<OverlayOpenCloseDetail>('sp-opened', {\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n                detail: {\n                    interaction: this.interaction,\n                },\n            })\n        );\n    }\n\n    private open(openDetail: OverlayOpenDetail): void {\n        this.extractDetail(openDetail);\n    }\n\n    private extractDetail(detail: OverlayOpenDetail): void {\n        this.overlayContent = detail.content;\n        this.overlayContentTip = detail.contentTip;\n        this.trigger = detail.trigger;\n        this.virtualTrigger = detail.virtualTrigger;\n        this.placement = detail.placement;\n        this.offset = detail.offset;\n        this.skidding = detail.skidding || 0;\n        this.interaction = detail.interaction;\n        this.theme = detail.theme;\n        this.receivesFocus = detail.receivesFocus;\n        this.root = detail.root;\n    }\n\n    public dispose(): void {\n        /* c8 ignore next */\n        if (this.state !== 'dispose') return;\n\n        /* c8 ignore next 4 */\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            delete this.timeout;\n        }\n\n        this.trigger.removeEventListener(\n            'keydown',\n            this.handleInlineTriggerKeydown\n        );\n\n        this.returnOverlayContent();\n        this.state = 'disposed';\n\n        if (this.willNotifyClosed) {\n            this.overlayContent.dispatchEvent(new Event('sp-overlay-closed'));\n            this.willNotifyClosed = false;\n        }\n\n        if (this.cleanup) {\n            this.cleanup();\n        }\n    }\n\n    private stealOverlayContent(\n        element: HTMLElement & { placement: Placement }\n    ): void {\n        this.originalPlacement = element.getAttribute('placement') as Placement;\n        this.restoreContent = reparentChildren([element], this, {\n            position: 'beforeend',\n            prepareCallback: (el) => {\n                const slotName = el.slot;\n                const placement = el.placement;\n                el.removeAttribute('slot');\n                return (el) => {\n                    el.slot = slotName;\n                    el.placement = placement;\n                };\n            },\n        });\n        this.stealOverlayContentResolver();\n    }\n\n    private willNotifyClosed = false;\n\n    private returnOverlayContent(): void {\n        /* c8 ignore next */\n        if (!this.restoreContent) return;\n\n        const [element] = this.restoreContent();\n        this.restoreContent = undefined;\n        this.willNotifyClosed = true;\n\n        if (this.originalPlacement) {\n            element.setAttribute('placement', this.originalPlacement);\n            delete this.originalPlacement;\n        }\n    }\n\n    private initialHeight: number | undefined;\n    private isConstrained = false;\n\n    public async placeOverlay(): Promise<void> {\n        if (!this.placement || this.placement === 'none') {\n            return;\n        }\n\n        this.cleanup = autoUpdate(\n            this.virtualTrigger || this.trigger,\n            this,\n            this.updateOverlayPosition,\n            {\n                elementResize: false,\n            }\n        );\n    }\n\n    public updateOverlayPosition = (): void => {\n        if (this.interaction !== 'modal' && this.cleanup) {\n            this.dispatchEvent(new Event('close'));\n            return;\n        }\n        this.setOverlayPosition();\n    };\n\n    public resetOverlayPosition = (): void => {\n        this.style.removeProperty('max-height');\n        this.style.removeProperty('height');\n        this.initialHeight = undefined;\n        this.isConstrained = false;\n        // force paint\n        this.offsetHeight;\n        this.setOverlayPosition();\n    };\n\n    public setOverlayPosition = async (): Promise<void> => {\n        if (!this.placement || this.placement === 'none') {\n            return;\n        }\n        await (document.fonts ? document.fonts.ready : Promise.resolve());\n\n        function roundByDPR(num: number): number {\n            const dpr = window.devicePixelRatio || 1;\n            return Math.round(num * dpr) / dpr || -10000;\n        }\n\n        // See: https://spectrum.adobe.com/page/popover/#Container-padding\n        const REQUIRED_DISTANCE_TO_EDGE = 8;\n        // See: https://github.com/adobe/spectrum-web-components/issues/910\n        const MIN_OVERLAY_HEIGHT = 100;\n\n        const flipMiddleware = this.virtualTrigger\n            ? flip({\n                  padding: REQUIRED_DISTANCE_TO_EDGE,\n                  fallbackPlacements: getFallbackPlacements(this.placement),\n              })\n            : flip({\n                  padding: REQUIRED_DISTANCE_TO_EDGE,\n              });\n\n        const middleware = [\n            offset({\n                mainAxis: this.offset,\n                crossAxis: this.skidding,\n            }),\n            shift({ padding: REQUIRED_DISTANCE_TO_EDGE }),\n            flipMiddleware,\n            size({\n                padding: REQUIRED_DISTANCE_TO_EDGE,\n                apply: ({\n                    availableWidth,\n                    availableHeight,\n                    rects: { floating },\n                }) => {\n                    const maxHeight = Math.max(\n                        MIN_OVERLAY_HEIGHT,\n                        Math.floor(availableHeight)\n                    );\n                    const actualHeight = floating.height;\n                    this.initialHeight =\n                        !this.isConstrained && !this.virtualTrigger\n                            ? actualHeight\n                            : this.initialHeight || actualHeight;\n                    this.isConstrained =\n                        actualHeight < this.initialHeight ||\n                        maxHeight <= actualHeight;\n                    const appliedHeight = this.isConstrained\n                        ? `${maxHeight}px`\n                        : '';\n                    Object.assign(this.style, {\n                        maxWidth: `${Math.floor(availableWidth)}px`,\n                        maxHeight: appliedHeight,\n                        height: appliedHeight,\n                    });\n                },\n            }),\n        ];\n        if (this.overlayContentTip) {\n            middleware.push(arrow({ element: this.overlayContentTip }));\n        }\n        const { x, y, placement, middlewareData } = await computePosition(\n            this.virtualTrigger || this.trigger,\n            this,\n            {\n                placement: this.placement,\n                middleware,\n                strategy: 'fixed',\n            }\n        );\n\n        Object.assign(this.style, {\n            top: '0px',\n            left: '0px',\n            transform: `translate(${roundByDPR(x)}px, ${roundByDPR(y)}px)`,\n        });\n\n        if (placement !== this.getAttribute('actual-placement')) {\n            this.setAttribute('actual-placement', placement);\n            this.overlayContent.setAttribute('placement', placement);\n        }\n\n        if (this.overlayContentTip && middlewareData.arrow) {\n            const { x: arrowX, y: arrowY } = middlewareData.arrow;\n\n            Object.assign(this.overlayContentTip.style, {\n                left: arrowX != null ? `${roundByDPR(arrowX)}px` : '',\n                top: arrowY != null ? `${roundByDPR(arrowY)}px` : '',\n                right: '',\n                bottom: '',\n            });\n        }\n    };\n\n    public async hide(animated = true): Promise<void> {\n        if (this.state !== 'active') return;\n        this.state = 'hiding';\n        if (animated) {\n            await this.applyContentAnimation('sp-overlay-fade-out');\n        }\n        this.state = 'dispose';\n    }\n\n    private schedulePositionUpdate(): void {\n        // Edge needs a little time to update the DOM before computing the layout\n        cancelAnimationFrame(this.positionAnimationFrame);\n        this.positionAnimationFrame = requestAnimationFrame(() => {\n            if (this.cleanup) {\n                this.updateOverlayPosition();\n            } else {\n                this.placeOverlay();\n            }\n        });\n    }\n\n    private onSlotChange(): void {\n        this.schedulePositionUpdate();\n    }\n\n    public handleInlineTriggerKeydown = (event: KeyboardEvent): void => {\n        const { code, shiftKey } = event;\n        /* c8 ignore next */\n        if (code !== 'Tab') return;\n        if (shiftKey) {\n            this.tabbingAway = true;\n            this.dispatchEvent(new Event('close'));\n            return;\n        }\n\n        event.stopPropagation();\n        event.preventDefault();\n        this.focus();\n    };\n\n    public applyContentAnimation(\n        animation: ContentAnimation\n    ): Promise<boolean> {\n        if (this.placement === 'none') {\n            return Promise.resolve(true);\n        }\n        this.resolveContentAnimationPromise();\n        return new Promise((resolve): void => {\n            this.resolveContentAnimationPromise = () => {\n                resolve(false);\n            };\n            const contents = this.shadowRoot.querySelector(\n                '#contents'\n            ) as HTMLElement;\n            const doneHandler = (event: AnimationEvent): void => {\n                if (animation !== event.animationName) return;\n                contents.removeEventListener('animationend', doneHandler);\n                contents.removeEventListener('animationcancel', doneHandler);\n                this.animating = false;\n                resolve(event.type === 'animationcancel');\n            };\n            contents.addEventListener('animationend', doneHandler);\n            contents.addEventListener('animationcancel', doneHandler);\n\n            contents.style.animationName = animation;\n            this.animating = true;\n        });\n    }\n\n    public renderTheme(content: TemplateResult): TemplateResult {\n        const { color, scale, lang, theme } = this.theme;\n        return html`\n            <sp-theme\n                theme=${ifDefined(theme)}\n                color=${ifDefined(color)}\n                scale=${ifDefined(scale)}\n                lang=${ifDefined(lang)}\n                part=\"theme\"\n            >\n                ${content}\n            </sp-theme>\n        `;\n    }\n\n    public override render(): TemplateResult {\n        const content = html`\n            <div id=\"contents\">\n                <slot @slotchange=${this.onSlotChange}></slot>\n            </div>\n        `;\n        return this.hasTheme ? this.renderTheme(content) : content;\n    }\n\n    public static create(details: OverlayOpenDetail): ActiveOverlay {\n        const overlay = new ActiveOverlay();\n\n        if (details.content) {\n            overlay.open(details);\n        }\n\n        return overlay;\n    }\n\n    private stealOverlayContentPromise = Promise.resolve();\n    private stealOverlayContentResolver!: () => void;\n\n    protected override async getUpdateComplete(): Promise<boolean> {\n        const actions: Promise<unknown>[] = [\n            super.getUpdateComplete(),\n            this.stealOverlayContentPromise,\n        ];\n        actions.push(this.contentAnimationPromise);\n        if (\n            typeof (this.overlayContent as SpectrumElement).updateComplete !==\n            'undefined'\n        ) {\n            actions.push(\n                (this.overlayContent as SpectrumElement).updateComplete\n            );\n        }\n        const [complete] = await Promise.all(actions);\n        return complete as boolean;\n    }\n\n    override disconnectedCallback(): void {\n        document.removeEventListener(\n            'sp-update-overlays',\n            this.resetOverlayPosition\n        );\n        super.disconnectedCallback();\n    }\n}\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nconst DEFAULT_WARMUP = 1000;\nconst DEFAULT_COOLDOWN = 1000;\n\n/**\n * A timer to help with implementation of warnup/cooldown behavior as described here:\n * https://spectrum.adobe.com/page/tooltip/#Immediate-or-delayed-appearance\n */\nexport class OverlayTimer {\n    private warmUpDelay = DEFAULT_WARMUP;\n    private coolDownDelay = DEFAULT_COOLDOWN;\n\n    private isWarm = false;\n    private cooldownTimeout?: number;\n\n    private component?: HTMLElement;\n    private timeout = 0;\n    private promise?: Promise<boolean>;\n    private resolve?: (cancelled: boolean) => void;\n\n    constructor(\n        options: { warmUpDelay?: number; coolDownDelay?: number } = {}\n    ) {\n        Object.assign(this, options);\n    }\n\n    public async openTimer(component: HTMLElement): Promise<boolean> {\n        this.cancelCooldownTimer();\n\n        if (!this.component || component !== this.component) {\n            if (this.component) {\n                this.close(this.component);\n                this.cancelCooldownTimer();\n            }\n            this.component = component;\n\n            if (this.isWarm) {\n                return false;\n            }\n\n            this.promise = new Promise((resolve) => {\n                this.resolve = resolve;\n                this.timeout = window.setTimeout(() => {\n                    if (this.resolve) {\n                        this.resolve(false);\n                        this.isWarm = true;\n                    }\n                }, this.warmUpDelay);\n            });\n            return this.promise;\n        } else if (this.promise) {\n            return this.promise;\n        } else {\n            // This should never happen\n            throw new Error('Inconsistent state');\n        }\n    }\n\n    public close(component: HTMLElement): void {\n        if (this.component && this.component === component) {\n            this.resetCooldownTimer();\n            if (this.timeout > 0) {\n                clearTimeout(this.timeout);\n                this.timeout = 0;\n            }\n            if (this.resolve) {\n                this.resolve(true);\n                delete this.resolve;\n            }\n            delete this.promise;\n            delete this.component;\n        }\n    }\n\n    private resetCooldownTimer(): void {\n        if (this.isWarm) {\n            if (this.cooldownTimeout) {\n                window.clearTimeout(this.cooldownTimeout);\n            }\n            this.cooldownTimeout = window.setTimeout(() => {\n                this.isWarm = false;\n                delete this.cooldownTimeout;\n            }, this.coolDownDelay);\n        }\n    }\n\n    private cancelCooldownTimer(): void {\n        if (this.cooldownTimeout) {\n            window.clearTimeout(this.cooldownTimeout);\n        }\n        delete this.cooldownTimeout;\n    }\n}\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { defineElement } from '@spectrum-web-components/base/src/define-element.js';\nimport { ActiveOverlay } from './src/ActiveOverlay.js';\n\ndefineElement('active-overlay', ActiveOverlay);\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'active-overlay': ActiveOverlay;\n    }\n}\n","/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nexport const getDeepElementFromPoint = (\n    x: number,\n    y: number\n): Element | null => {\n    let target = document.elementFromPoint(x, y);\n    while (target?.shadowRoot) {\n        const innerTarget = (\n            target.shadowRoot as unknown as {\n                elementFromPoint: (x: number, y: number) => Element | null;\n            }\n        ).elementFromPoint(x, y);\n        if (!innerTarget || innerTarget === target) {\n            break;\n        }\n        target = innerTarget;\n    }\n    return target;\n};\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { ActiveOverlay } from './ActiveOverlay.js';\nimport type {\n    OverlayOpenCloseDetail,\n    OverlayOpenDetail,\n} from './overlay-types';\nimport { OverlayTimer } from './overlay-timer.js';\nimport '../active-overlay.js';\nimport {\n    findOverlaysRootedInOverlay,\n    parentOverlayOf,\n} from './overlay-utils.js';\nimport { OverlayCloseEvent } from './overlay-events.js';\nimport { getDeepElementFromPoint } from '@spectrum-web-components/shared/src/get-deep-element-from-point.js';\n\nfunction isLeftClick(event: MouseEvent): boolean {\n    return event.button === 0;\n}\n\nfunction hasModifier(event: MouseEvent): boolean {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\ninterface ManagedOverlayContent {\n    open: boolean;\n    // Allow the overlaid content to do something before it is thrown.\n    overlayWillOpenCallback?: (args: { trigger: HTMLElement }) => void;\n    // Allow the overlaid content to do something when it has been thrown.\n    overlayOpenCallback?: (args: { trigger: HTMLElement }) => void;\n    // Allow the overlaid content to do something when its throw has been cancelled.\n    overlayOpenCancelledCallback?: (args: { trigger: HTMLElement }) => void;\n    // Allow the overlaid content to do something before it is recalled, and return `true` if it will self managing the recall.\n    overlayWillCloseCallback?: (args: { trigger: HTMLElement }) => boolean;\n    // Allow the overlaid content to do something when it has been recalled.\n    overlayCloseCallback?: (args: { trigger: HTMLElement }) => void;\n    // Surface possible LitElement lifecycle methods on the synthetically types element.\n    updateComplete?: Promise<boolean>;\n}\n\nfunction nextFrame(): Promise<void> {\n    return new Promise((res) => requestAnimationFrame(() => res()));\n}\n\nexport class OverlayStack {\n    public overlays: ActiveOverlay[] = [];\n\n    private preventMouseRootClose = false;\n    private root: HTMLElement = document.body;\n    private handlingResize = false;\n    private overlayTimer = new OverlayTimer();\n\n    private canTabTrap = true;\n    private trappingInited = false;\n    private tabTrapper!: HTMLElement;\n    private overlayHolder!: HTMLElement;\n    private _eventsAreBound = false;\n\n    constructor() {\n        this.initTabTrapping();\n    }\n\n    private initTabTrapping(): void {\n        /* c8 ignore next 10 */\n        if (document.readyState === 'loading') {\n            document.addEventListener(\n                'readystatechange',\n                () => {\n                    this.initTabTrapping();\n                },\n                { once: true }\n            );\n            return;\n        }\n        if (this.trappingInited) return;\n        /* c8 ignore next 4 */\n        if (this.document.body.shadowRoot) {\n            this.canTabTrap = false;\n            return;\n        }\n        this.document.body.attachShadow({ mode: 'open' });\n        /* c8 ignore next 3 */\n        if (!this.document.body.shadowRoot) {\n            return;\n        }\n        this.trappingInited = true;\n        const root = this.document.body.shadowRoot as ShadowRoot;\n        root.innerHTML = `\n            <style>\n            :host {\n                position: relative;\n            }\n            #actual {\n                position: relative;\n                height: calc(100% - var(--swc-body-margins-block, 0px));\n                z-index: 0;\n                min-height: calc(100vh - var(--swc-body-margins-block, 0px));\n                min-height: calc(100dvh - var(--swc-body-margins-block, 0px));\n            }\n            #holder {\n                display: none;\n                align-items: center;\n                justify-content: center;\n                flex-flow: column;\n                width: 100%;\n                height: 100%;\n                position: absolute;\n                top: 0;\n                left: 0;\n            }\n            [name=\"open\"]::slotted(*) {\n                pointer-events: all;\n            }\n            #actual[aria-hidden] + #holder {\n                display: flex;\n            }\n            </style>\n            <div id=\"actual\"><slot></slot></div>\n            <div id=\"holder\"><slot name=\"open\"></slot></div>\n        `;\n        this.tabTrapper = root.querySelector('#actual') as HTMLElement;\n        this.overlayHolder = root.querySelector('#holder') as HTMLElement;\n        this.tabTrapper.attachShadow({ mode: 'open' });\n        if (this.tabTrapper.shadowRoot) {\n            this.tabTrapper.shadowRoot.innerHTML = '<slot></slot>';\n        }\n        this.overlayHolder.addEventListener(\n            'contextmenu',\n            this.forwardContextmenuEvent,\n            true\n        );\n        requestAnimationFrame(() => {\n            this.applyBodyMargins();\n            const observer = new ResizeObserver(() => {\n                this.applyBodyMargins();\n            });\n            observer.observe(document.body);\n        });\n    }\n\n    private _bodyMarginsApplied = false;\n\n    private applyBodyMargins(): void {\n        const { marginLeft, marginRight, marginTop, marginBottom } =\n            getComputedStyle(document.body);\n        const allZero =\n            parseFloat(marginLeft) === 0 &&\n            parseFloat(marginRight) === 0 &&\n            parseFloat(marginTop) === 0 &&\n            parseFloat(marginBottom) === 0;\n        if (allZero && !this._bodyMarginsApplied) {\n            return;\n        }\n        this.tabTrapper.style.setProperty(\n            '--swc-body-margins-inline',\n            `calc(${marginLeft} + ${marginRight})`\n        );\n        this.tabTrapper.style.setProperty(\n            '--swc-body-margins-block',\n            `calc(${marginTop} + ${marginBottom})`\n        );\n        this._bodyMarginsApplied = !allZero;\n    }\n\n    private startTabTrapping(): void {\n        this.initTabTrapping();\n        /* c8 ignore next 3 */\n        if (!this.canTabTrap) {\n            return;\n        }\n        this.tabTrapper.tabIndex = -1;\n        this.tabTrapper.setAttribute('aria-hidden', 'true');\n    }\n\n    private stopTabTrapping(): void {\n        /* c8 ignore next 3 */\n        if (!this.canTabTrap || !this.trappingInited) {\n            return;\n        }\n        this.tabTrapper.removeAttribute('tabindex');\n        this.tabTrapper.removeAttribute('aria-hidden');\n    }\n\n    private forwardContextmenuEvent = async (\n        event: MouseEvent\n    ): Promise<void> => {\n        const topOverlay = this.overlays[this.overlays.length - 1];\n        if (\n            !this.trappingInited ||\n            topOverlay.interaction !== 'modal' ||\n            event.target !== this.overlayHolder\n        ) {\n            return;\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        await this.closeTopOverlay();\n        getDeepElementFromPoint(event.clientX, event.clientY)?.dispatchEvent(\n            new MouseEvent('contextmenu', event)\n        );\n    };\n\n    private get document(): Document {\n        return this.root.ownerDocument /* c8 ignore next */ || document;\n    }\n\n    private get topOverlay(): ActiveOverlay | undefined {\n        return this.overlays.slice(-1)[0];\n    }\n\n    private findOverlayForContent(\n        overlayContent: HTMLElement\n    ): ActiveOverlay | undefined {\n        for (const item of this.overlays) {\n            if (overlayContent === item.overlayContent) {\n                return item;\n            }\n        }\n        return undefined;\n    }\n\n    private addEventListeners(): void {\n        if (this._eventsAreBound) return;\n        this._eventsAreBound = true;\n        this.document.addEventListener('click', this.handleMouseCapture, true);\n        this.document.addEventListener('click', this.handleMouse);\n        this.document.addEventListener('keydown', this.handleKeydown);\n        this.document.addEventListener(\n            'sp-overlay-close',\n            this.handleOverlayClose as EventListener\n        );\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    handleOverlayClose = (event: OverlayCloseEvent): void => {\n        const { root } = event;\n        if (!root) return;\n        this.closeOverlaysForRoot(root);\n    };\n\n    private isClickOverlayActiveForTrigger(trigger: HTMLElement): boolean {\n        return this.overlays.some(\n            (item) => trigger === item.trigger && item.interaction === 'click'\n        );\n    }\n\n    public async openOverlay(details: OverlayOpenDetail): Promise<boolean> {\n        this.addEventListeners();\n        if (this.findOverlayForContent(details.content)) {\n            return false;\n        }\n        if (details.notImmediatelyClosable) {\n            this._doesNotCloseOnFirstClick = true;\n        }\n        if (details.interaction === 'modal') {\n            this.startTabTrapping();\n        }\n\n        const contentWithLifecycle =\n            details.content as unknown as ManagedOverlayContent;\n        const { trigger } = details;\n        if (contentWithLifecycle.overlayWillOpenCallback) {\n            contentWithLifecycle.overlayWillOpenCallback({ trigger });\n        }\n\n        if (details.delayed) {\n            const cancelledPromise = this.overlayTimer.openTimer(\n                details.content\n            );\n            const promises = [cancelledPromise];\n            if (details.abortPromise) {\n                promises.push(details.abortPromise);\n            }\n            const cancelled = await Promise.race(promises);\n            if (cancelled) {\n                if (contentWithLifecycle.overlayOpenCancelledCallback) {\n                    contentWithLifecycle.overlayOpenCancelledCallback({\n                        trigger,\n                    });\n                }\n                return cancelled;\n            }\n        }\n\n        if (details.root) {\n            this.closeOverlaysForRoot(details.root);\n        }\n        if (details.interaction === 'click') {\n            this.closeAllHoverOverlays();\n        } else if (\n            details.interaction === 'hover' &&\n            this.isClickOverlayActiveForTrigger(details.trigger)\n        ) {\n            // Don't show a hover popover if the click popover is already active\n            return true;\n        }\n\n        const activeOverlay = ActiveOverlay.create(details);\n\n        if (this.overlays.length) {\n            const topOverlay = this.overlays[this.overlays.length - 1];\n            topOverlay.obscure(activeOverlay.interaction);\n        }\n\n        document.body.appendChild(activeOverlay);\n\n        /**\n         * The following work to make the new overlay the \"top\" of the stack\n         * has to happen AFTER the current call stack completes in case there\n         * is work there in to remove the previous \"top\" overlay.\n         */\n        await nextFrame();\n        this.overlays.push(activeOverlay);\n        await activeOverlay.updateComplete;\n        this.addOverlayEventListeners(activeOverlay);\n        if (typeof contentWithLifecycle.open !== 'undefined') {\n            await nextFrame();\n            // Without the rAF Firefox gets here to early\n            // and is not able trigger the animation.\n            contentWithLifecycle.open = true;\n        }\n        let cb: () => Promise<void> | void = () => {\n            return;\n        };\n        if (contentWithLifecycle.overlayOpenCallback) {\n            const { trigger } = activeOverlay;\n            const { overlayOpenCallback } = contentWithLifecycle;\n            cb = async () => await overlayOpenCallback({ trigger });\n        }\n        await activeOverlay.openCallback(cb);\n        return false;\n    }\n\n    public addOverlayEventListeners(activeOverlay: ActiveOverlay): void {\n        activeOverlay.addEventListener('close', (() => {\n            this.hideAndCloseOverlay(\n                activeOverlay,\n                true // animated?\n            );\n        }) as EventListener);\n        switch (activeOverlay.interaction) {\n            case 'replace':\n                this.addReplaceOverlayEventListeners(activeOverlay);\n                break;\n            case 'inline':\n                this.addInlineOverlayEventListeners(activeOverlay);\n                break;\n        }\n    }\n\n    public addReplaceOverlayEventListeners(activeOverlay: ActiveOverlay): void {\n        activeOverlay.addEventListener('keydown', (event: KeyboardEvent) => {\n            const { code } = event;\n            /* c8 ignore next */\n            if (code !== 'Tab') return;\n\n            event.stopPropagation();\n            this.closeOverlay(activeOverlay.overlayContent);\n            activeOverlay.tabbingAway = true;\n            activeOverlay.trigger.focus();\n            activeOverlay.trigger.dispatchEvent(\n                new KeyboardEvent('keydown', event)\n            );\n        });\n    }\n\n    public addInlineOverlayEventListeners(activeOverlay: ActiveOverlay): void {\n        activeOverlay.trigger.addEventListener(\n            'keydown',\n            activeOverlay.handleInlineTriggerKeydown\n        );\n        activeOverlay.addEventListener('keydown', (event: KeyboardEvent) => {\n            const { code, shiftKey } = event;\n            /* c8 ignore next */\n            if (code !== 'Tab') return;\n\n            activeOverlay.tabbingAway = true;\n            if (shiftKey) {\n                const returnFocusElement = document.createElement('span');\n                returnFocusElement.tabIndex = -1;\n                if (activeOverlay.trigger.hasAttribute('slot')) {\n                    returnFocusElement.slot = activeOverlay.trigger.slot;\n                }\n                activeOverlay.trigger.insertAdjacentElement(\n                    'afterend',\n                    returnFocusElement\n                );\n                returnFocusElement.focus();\n                returnFocusElement.remove();\n                return;\n            }\n\n            event.stopPropagation();\n            const triggerWithLifecycle =\n                activeOverlay.trigger as unknown as ManagedOverlayContent;\n            if (typeof triggerWithLifecycle.open !== 'undefined') {\n                triggerWithLifecycle.open = false;\n            }\n            this.closeOverlay(activeOverlay.overlayContent);\n            activeOverlay.trigger.focus();\n        });\n    }\n\n    public closeOverlay(content: HTMLElement): void {\n        this.overlayTimer.close(content);\n        requestAnimationFrame(() => {\n            const overlayFromContent = this.findOverlayForContent(content);\n            const overlaysToClose = [overlayFromContent];\n            overlaysToClose.push(\n                ...findOverlaysRootedInOverlay(\n                    overlayFromContent,\n                    this.overlays\n                )\n            );\n            overlaysToClose.forEach((overlay) =>\n                this.hideAndCloseOverlay(overlay)\n            );\n        });\n    }\n\n    private handleMouseCapture = (event: MouseEvent): void => {\n        const topOverlay = this.topOverlay;\n        if (\n            !event.target ||\n            !topOverlay ||\n            !topOverlay.overlayContent ||\n            hasModifier(event) ||\n            !isLeftClick(event)\n        ) {\n            this.preventMouseRootClose = true;\n            return;\n        }\n\n        if (event.target instanceof Node) {\n            const path = event.composedPath();\n            if (path.indexOf(topOverlay.overlayContent) >= 0) {\n                this.preventMouseRootClose = true;\n                return;\n            }\n            this.preventMouseRootClose = false;\n        }\n    };\n\n    private closeAllHoverOverlays(): void {\n        for (const overlay of this.overlays) {\n            if (overlay.interaction === 'hover') {\n                this.hideAndCloseOverlay(overlay, false);\n            }\n        }\n    }\n\n    private closeOverlaysForRoot(root: HTMLElement): void {\n        const overlaysToClose: ActiveOverlay[] = [];\n        for (const overlay of this.overlays) {\n            if (overlay.root && overlay.root === root) {\n                overlaysToClose.push(overlay);\n                overlaysToClose.push(\n                    ...findOverlaysRootedInOverlay(overlay, this.overlays)\n                );\n            }\n        }\n        overlaysToClose.forEach((overlay) =>\n            this.hideAndCloseOverlay(overlay, true, true)\n        );\n    }\n\n    private async manageFocusAfterCloseWhenOverlaysRemain(\n        returnBeforeFocus?: boolean,\n        previousTrigger?: HTMLElement\n    ): Promise<void> {\n        const topOverlay = this.overlays[this.overlays.length - 1];\n        topOverlay.feature();\n        // Push focus in the the next remaining overlay as needed when a `type=\"modal\"` overlay exists.\n        if (topOverlay.interaction === 'modal' || topOverlay.hasModalRoot) {\n            if (returnBeforeFocus) return;\n            await (previousTrigger || topOverlay).focus();\n        } else {\n            this.stopTabTrapping();\n        }\n    }\n\n    private manageFocusAfterCloseWhenLastOverlay(overlay: ActiveOverlay): void {\n        this.stopTabTrapping();\n        const isModal = overlay.interaction === 'modal';\n        const isReceivesFocus = overlay.receivesFocus === 'auto';\n        const isReplace = overlay.interaction === 'replace';\n        const isInline = overlay.interaction === 'inline';\n        const isTabbingAwayFromInlineOrReplace =\n            (isReplace || isInline) && !overlay.tabbingAway;\n        overlay.tabbingAway = false;\n        if (!isModal && !isReceivesFocus && !isTabbingAwayFromInlineOrReplace) {\n            return;\n        }\n        // Manage post closure focus when needed.\n        const overlayRoot = overlay.overlayContent.getRootNode() as ShadowRoot;\n        const overlayContentActiveElement = overlayRoot.activeElement;\n        let triggerRoot: ShadowRoot;\n        let triggerActiveElement: Element | null;\n        const contentContainsActiveElement = (): boolean =>\n            overlay.overlayContent.contains(overlayContentActiveElement);\n        const triggerRootContainsActiveElement = (): boolean => {\n            triggerRoot = overlay.trigger.getRootNode() as ShadowRoot;\n            triggerActiveElement = triggerRoot.activeElement;\n            return triggerRoot.contains(triggerActiveElement);\n        };\n        const triggerHostIsActiveElement = (): boolean =>\n            triggerRoot.host && triggerRoot.host === triggerActiveElement;\n        // Return focus to the trigger as long as the user hasn't actively focused\n        // something outside of the current overlay interface; trigger, root, host.\n        if (\n            isModal ||\n            contentContainsActiveElement() ||\n            triggerRootContainsActiveElement() ||\n            triggerHostIsActiveElement()\n        ) {\n            overlay.trigger.focus();\n        }\n    }\n\n    private async hideAndCloseOverlay(\n        overlay?: ActiveOverlay,\n        animated?: boolean,\n        returnBeforeFocus?: boolean\n    ): Promise<void> {\n        if (!overlay) {\n            return;\n        }\n        const contentWithLifecycle =\n            overlay.overlayContent as unknown as ManagedOverlayContent;\n        if (\n            typeof contentWithLifecycle.overlayWillCloseCallback !== 'undefined'\n        ) {\n            const { trigger } = overlay;\n            if (contentWithLifecycle.overlayWillCloseCallback({ trigger })) {\n                return;\n            }\n        }\n        await overlay.hide(animated);\n        if (typeof contentWithLifecycle.open !== 'undefined') {\n            contentWithLifecycle.open = false;\n        }\n        if (contentWithLifecycle.overlayCloseCallback) {\n            const { trigger } = overlay;\n            await contentWithLifecycle.overlayCloseCallback({ trigger });\n        }\n\n        if (overlay.state != 'dispose') return;\n\n        const index = this.overlays.indexOf(overlay);\n        if (index >= 0) {\n            this.overlays.splice(index, 1);\n        }\n\n        if (this.overlays.length) {\n            await this.manageFocusAfterCloseWhenOverlaysRemain(\n                returnBeforeFocus || overlay.interaction === 'hover',\n                overlay.trigger\n            );\n        } else {\n            this.manageFocusAfterCloseWhenLastOverlay(overlay);\n        }\n\n        await overlay.updateComplete;\n        overlay.remove();\n        overlay.dispose();\n\n        overlay.trigger.dispatchEvent(\n            new CustomEvent<OverlayOpenCloseDetail>('sp-closed', {\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n                detail: {\n                    interaction: overlay.interaction,\n                },\n            })\n        );\n    }\n\n    private closeTopOverlay(): Promise<void> {\n        return this.hideAndCloseOverlay(this.topOverlay, true);\n    }\n\n    /**\n     * A \"longpress\" occurs before the \"click\" that creates it has occured.\n     * In that way the first click will still be part of the \"longpress\" and\n     * not part of closing the overlay.\n     */\n    private _doesNotCloseOnFirstClick = false;\n\n    private handleMouse = (event: Event): void => {\n        if (this._doesNotCloseOnFirstClick) {\n            this._doesNotCloseOnFirstClick = false;\n            return;\n        }\n        if (this.preventMouseRootClose || event.defaultPrevented) {\n            return;\n        }\n        const overlaysToClose = [];\n        /**\n         * Find the first overlay that should be closed by this and include it in the\n         * array of overlays for closure.\n         *\n         * Event path dictates closure while the click event:\n         * - did not occur within the overlay content of the overlay\n         * AND was\n         * - not triggered by something in the click event's composed path\n         * OR\n         * - not a \"hover\" overlay\n         * Select the overlay for closure\n         */\n        let index = this.overlays.length;\n        while (index && overlaysToClose.length === 0) {\n            index -= 1;\n            const overlay = this.overlays[index];\n            const path = event.composedPath();\n            const eventPathDictatesClosure =\n                (!path.includes(overlay.trigger) ||\n                    overlay.interaction !== 'hover') &&\n                !path.includes(overlay.overlayContent);\n            if (eventPathDictatesClosure) {\n                overlaysToClose.push(overlay);\n            }\n        }\n        let root: HTMLElement | undefined = this.topOverlay?.root;\n        let overlay = parentOverlayOf(root);\n        while (root && overlay) {\n            overlaysToClose.push(overlay);\n            overlay = parentOverlayOf(root);\n            root = overlay?.root;\n        }\n        if (overlay) {\n            overlaysToClose.push(overlay);\n        }\n        overlaysToClose.forEach((overlay) => this.hideAndCloseOverlay(overlay));\n    };\n\n    private handleKeydown = (event: KeyboardEvent): void => {\n        if (event.code === 'Escape') {\n            this.closeTopOverlay();\n        }\n    };\n\n    private handleResize = (): void => {\n        if (this.handlingResize) return;\n\n        this.handlingResize = true;\n        requestAnimationFrame(async () => {\n            const promises = this.overlays.map((overlay) =>\n                overlay.updateOverlayPosition()\n            );\n            await Promise.all(promises);\n            this.handlingResize = false;\n        });\n    };\n}\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport type { ThemeData } from '@spectrum-web-components/theme/src/Theme.js';\nimport type {\n    OverlayDisplayQueryDetail,\n    OverlayOptions,\n    TriggerInteractions,\n} from './overlay-types';\nimport { OverlayStack } from './overlay-stack.js';\n\n/**\n * This class allows access to the overlay system which allows a client to\n * position an element in the overlay positioned relative to another node.\n */\nexport class Overlay {\n    private static overlayStack = new OverlayStack();\n\n    private isOpen = false;\n    private overlayElement: HTMLElement;\n    private owner: HTMLElement;\n    private interaction: TriggerInteractions;\n\n    /**\n     *\n     * @param owner the parent element we will use to position the overlay element\n     * @param interaction the type of interaction that caused this overlay to be shown\n     * @param overlayElement the item to display as an overlay\n     */\n    constructor(\n        owner: HTMLElement,\n        interaction: TriggerInteractions,\n        overlayElement: HTMLElement\n    ) {\n        this.owner = owner;\n        this.overlayElement = overlayElement;\n        this.interaction = interaction;\n    }\n\n    /**\n     * Open an overlay\n     *\n     * @param owner the parent element we will use to position the overlay element\n     * @param interaction the type of interaction that caused this overlay to be shown\n     * @param overlayElement the item to display as an overlay\n     * @param options display parameters\n     * @param options.delayed if true delay opening of the overlay based on the global warmup/cooldown timer\n     * @param options.offset distance to offset the overlay\n     * @param options.placement side on which to position the overlay\n     * @returns an Overlay object which can be used to close the overlay\n     */\n    public static async open(\n        owner: HTMLElement,\n        interaction: TriggerInteractions,\n        overlayElement: HTMLElement,\n        options: OverlayOptions\n    ): Promise<() => void> {\n        const overlay = new Overlay(owner, interaction, overlayElement);\n        if (window.__swc.DEBUG) {\n            window.__swc.warn(\n                undefined,\n                'The Overlay API is currently being refactored and there are likely to be breaking changes, deprecations and/or removals in a future release. The SWC team wants feedback from direct Overlay API consumers like you - please share your thoughts on the future of overlays here:',\n                'https://github.com/adobe/spectrum-web-components/discussions/2764',\n                {\n                    type: 'default',\n                    level: 'deprecation',\n                }\n            );\n        }\n        await overlay.open(options);\n        return (): void => {\n            overlay.close();\n        };\n    }\n\n    public static update(): void {\n        const overlayUpdateEvent = new CustomEvent('sp-update-overlays', {\n            bubbles: true,\n            composed: true,\n            cancelable: true,\n        });\n        document.dispatchEvent(overlayUpdateEvent);\n    }\n\n    /**\n     * Open an overlay\n     *\n     * @param options display parameters\n     * @param options.delayed delay before opening the overlay\n     * @param options.offset distance to offset the overlay\n     * @param options.placement side on which to position the overlay\n     * @returns a Promise that resolves to true if this operation was cancelled\n     */\n    public async open({\n        abortPromise,\n        delayed,\n        offset = 0,\n        placement = 'top',\n        receivesFocus,\n        notImmediatelyClosable,\n        virtualTrigger,\n        root,\n    }: OverlayOptions): Promise<boolean> {\n        /* c8 ignore next */\n        if (this.isOpen) return true;\n\n        if (delayed === undefined) {\n            delayed = this.overlayElement.hasAttribute('delayed');\n        }\n\n        const queryThemeDetail: ThemeData = {\n            color: undefined,\n            scale: undefined,\n            lang: undefined,\n            theme: undefined,\n        };\n        const queryThemeEvent = new CustomEvent<ThemeData>('sp-query-theme', {\n            bubbles: true,\n            composed: true,\n            detail: queryThemeDetail,\n            cancelable: true,\n        });\n        this.owner.dispatchEvent(queryThemeEvent);\n\n        const overlayDetailQuery: OverlayDisplayQueryDetail = {};\n        const queryOverlayDetailEvent =\n            new CustomEvent<OverlayDisplayQueryDetail>('sp-overlay-query', {\n                bubbles: true,\n                composed: true,\n                detail: overlayDetailQuery,\n                cancelable: true,\n            });\n        this.overlayElement.dispatchEvent(queryOverlayDetailEvent);\n\n        await Overlay.overlayStack.openOverlay({\n            abortPromise,\n            content: this.overlayElement,\n            contentTip: overlayDetailQuery.overlayContentTipElement,\n            delayed,\n            offset: offset,\n            placement: placement,\n            trigger: this.owner,\n            interaction: this.interaction,\n            theme: queryThemeDetail,\n            receivesFocus,\n            root,\n            notImmediatelyClosable,\n            virtualTrigger,\n            ...overlayDetailQuery,\n        });\n        this.isOpen = true;\n        return true;\n    }\n\n    /**\n     * Close the overlay if it is open\n     */\n    public close(): void {\n        Overlay.overlayStack.closeOverlay(this.overlayElement);\n    }\n}\n\n/**\n * Announces that an overlay-based UI element has opened\n * @event sp-open\n * @type {object}\n * @property {TriggerInteractions} interaction type of interaction that triggered the opening\n */\n\n/**\n * Announces that an overlay-based UI element has opened\n * @event sp-close\n * @type {object}\n * @property {TriggerInteractions} interaction type of interaction that triggered the closing\n */\n"],"names":["_templateObject","t","_taggedTemplateLiteral","parentOverlayOf","e","o","closest","getRootNode","host","findOverlaysRootedInOverlay","_step","_iterator","_createForOfIteratorHelper","s","n","done","r","value","root","push","apply","_toConsumableArray","err","f","min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","replace","getOppositeAxisPlacements","flipAlignment","direction","list","side","isStart","lr","rl","getSideList","map","concat","getPaddingObject","padding","_objectSpread","expandPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","coords","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","computePosition","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_config$placement","_config$strategy","strategy","_config$middleware","middleware","platform","validMiddleware","_computeCoordsFromPla","statefulPlacement","middlewareData","resetCount","i","_validMiddleware$i","name","fn","_yield$fn","nextX","nextY","data","reset","_computeCoordsFromPla2","wrap","_context","prev","next","filter","Boolean","isRTL","sent","getElementRects","initialPlacement","elements","_defineProperty","t0","abrupt","stop","_x","_x2","_x3","arguments","detectOverflow","_x4","_x5","_detectOverflow","_callee10","state","options","_await$platform$isEle","_evaluate8","_evaluate8$boundary","boundary","_evaluate8$rootBounda","rootBoundary","_evaluate8$elementCon","elementContext","_evaluate8$altBoundar","altBoundary","_evaluate8$padding","paddingObject","altContext","element","clippingClientRect","offsetParent","offsetScale","elementClientRect","_context10","t1","isElement","t2","t3","t4","t5","contextElement","getDocumentElement","t6","t7","t8","t9","t10","getClippingRect","call","t11","getOffsetParent","getScale","t13","t12","t14","convertOffsetParentRelativeRectToViewportRelativeRect","t15","t16","arrow","_callee2","_data","_ref4","_ref3","_ref3$padding","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","offset","shouldAddOffset","alignmentOffset","_context2","getDimensions","flip","_callee4","_middlewareData$flip","_evaluate2","_evaluate2$mainAxis","checkMainAxis","_evaluate2$crossAxis","checkCrossAxis","specifiedFallbackPlacements","_evaluate2$fallbackSt","fallbackStrategy","_evaluate2$fallbackAx","fallbackAxisSideDirection","_evaluate2$flipAlignm","detectOverflowOptions","isBasePlacement","fallbackPlacements","placements","overflow","overflows","overflowsData","_sides","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","resetPlacement","_overflowsData$map$so","_placement","_context4","mainAxis","crossAxis","_objectWithoutProperties","_excluded2","sides","every","index","d","sort","a","b","reduce","acc","convertValueToCoords","_x6","_x7","_convertValueToCoords","_callee11","mainAxisMulti","crossAxisMulti","rawValue","_ref6","_context11","_callee7","diffCoords","_context7","shift","_callee8","_objectSpread3","_evaluate5","_evaluate5$mainAxis","_evaluate5$crossAxis","_evaluate5$limiter","limiter","mainAxisCoord","crossAxisCoord","maxSide","_min","_max","_maxSide","_min2","_max2","limitedCoords","_context8","_excluded4","size","_callee9","_evaluate7","_evaluate7$apply","_rects$floating","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","_context9","_excluded5","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","_getComputedStyle","getComputedStyle","overflowX","overflowY","display","test","isTableElement","isContainingBlock","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","some","willChange","contain","CSS","supports","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getParentNode","result","assignedSlot","parentNode","getNearestOverflowAncestor","body","getOverflowAncestors","_node$ownerDocument2","scrollableAncestor","isBody","win","visualViewport","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","_getCssDimensions","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","getTrueOffsetParent","polyfill","currentNode","getContainingBlock","getOffsetParentFn","getDimensionsFn","this","elementClippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getClientRects","Array","from","autoUpdate","update","_options","_options$ancestorScro","ancestorScroll","_options$ancestorResi","ancestorResize","_options$elementResiz","elementResize","ResizeObserver","_options$layoutShift","layoutShift","IntersectionObserver","_options$animationFra","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","frameId","cleanupIo","onMove","timeoutId","io","cleanup","clearTimeout","disconnect","refresh","skip","threshold","_element$getBoundingC","rootMargin","isFirstUpdate","handleObserve","observe","entries","ratio","intersectionRatio","setTimeout","observeMove","reobserveFrame","resizeObserver","firstEntry","_slicedToArray","target","unobserve","cancelAnimationFrame","requestAnimationFrame","prevRefRect","frameLoop","nextRefRect","removeEventListener","Map","mergedOptions","platformWithCache","computePosition$1","P","initial","states","idle","on","active","hiding","dispose","disposed","T","U","u","_inherits","_super","_createSuper","_this","_classCallCheck","contentAnimationPromise","Promise","resolve","resolveContentAnimationPromise","_state","animating","theme","tabbingAway","skidding","interaction","positionAnimationFrame","willNotifyClosed","isConstrained","updateOverlayPosition","dispatchEvent","Event","setOverlayPosition","resetOverlayPosition","style","removeProperty","initialHeight","_yield$M","O","w","_v$arrow","l","devicePixelRatio","fonts","ready","virtualTrigger","C","D","_","k","E","m","g","Object","assign","maxWidth","maxHeight","overlayContentTip","I","M","trigger","_assertThisInitialized","getAttribute","setAttribute","overlayContent","handleInlineTriggerKeydown","code","shiftKey","stopPropagation","preventDefault","focus","stealOverlayContentPromise","stealOverlayContentResolver","_createClass","key","removeAttribute","_focus","H","updateComplete","activeElement","contains","_get","_getPrototypeOf","prototype","color","lang","_modalRoot","tabIndex","slot","feature","obscure","_willUpdate","_callee3","_context3","hasUpdated","stealOverlayContent","applyContentAnimation","_openCallback","receivesFocus","CustomEvent","bubbles","composed","cancelable","detail","extractDetail","content","contentTip","timeout","returnOverlayContent","originalPlacement","restoreContent","S","prepareCallback","_this$restoreContent","_placeOverlay","_callee5","_context5","L","_hide","_callee6","_args6","_context6","undefined","_this2","placeOverlay","schedulePositionUpdate","_this3","shadowRoot","querySelector","animationName","type","_this$theme","h","_templateObject2","onSlotChange","hasTheme","renderTheme","_getUpdateComplete","_yield$Promise$all","_yield$Promise$all2","all","F","open","ActiveOverlay","p","c","reflect","attribute","OverlayTimer","warmUpDelay","coolDownDelay","isWarm","_openTimer","cancelCooldownTimer","component","close","promise","Error","resetCooldownTimer","cooldownTimeout","getDeepElementFromPoint","elementFromPoint","OverlayStack","overlays","preventMouseRootClose","handlingResize","overlayTimer","canTabTrap","trappingInited","_eventsAreBound","_bodyMarginsApplied","forwardContextmenuEvent","overlayHolder","closeTopOverlay","clientX","clientY","MouseEvent","handleOverlayClose","closeOverlaysForRoot","handleMouseCapture","topOverlay","metaKey","altKey","ctrlKey","button","composedPath","indexOf","_doesNotCloseOnFirstClick","handleMouse","defaultPrevented","hideAndCloseOverlay","handleKeydown","handleResize","initTabTrapping","readyState","attachShadow","mode","innerHTML","tabTrapper","applyBodyMargins","once","marginLeft","marginRight","marginTop","marginBottom","setProperty","slice","_openOverlay","_a","addEventListeners","findOverlayForContent","notImmediatelyClosable","startTabTrapping","overlayWillOpenCallback","delayed","openTimer","abortPromise","race","overlayOpenCancelledCallback","closeAllHoverOverlays","isClickOverlayActiveForTrigger","create","appendChild","addOverlayEventListeners","overlayOpenCallback","openCallback","addReplaceOverlayEventListeners","addInlineOverlayEventListeners","_this4","closeOverlay","KeyboardEvent","_this5","createElement","hasAttribute","insertAdjacentElement","remove","_this6","_step2","_iterator2","_step3","_this7","_iterator3","_manageFocusAfterCloseWhenOverlaysRemain","hasModalRoot","stopTabTrapping","_hideAndCloseOverlay","_n","overlayWillCloseCallback","hide","overlayCloseCallback","splice","manageFocusAfterCloseWhenOverlaysRemain","manageFocusAfterCloseWhenLastOverlay","isOpen","owner","overlayElement","_open","_ref$offset","_ref$placement","overlayStack","openOverlay","overlayContentTipElement","_open2","Overlay"],"sourceRoot":""}